dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation rootProject.ext.dependencies["constraint_layout"]
    implementation rootProject.ext.dependencies["recyclerview"]
    implementation rootProject.ext.dependencies["design"]
    implementation rootProject.ext.dependencies["cardview"]
    testImplementation rootProject.ext.dependencies["junit"]

//    implementation(name: 'updatepluginlib-release', ext: 'aar')
    //    如果aar包有很多，也可以一样象jar包统一添加一个文件夹下的所有包：
//    def dir = new File('app/libs')
//    dir.traverse(
//            nameFilter: ~/.*\.aar/
//    ) { file ->
//        def name = file.getName().replace('.aar', '')
//        implementation(name: name, ext: 'aar')
//    }

    //------------module依赖----------------------------------
    implementation rootProject.ext.dependencies["module_support"]
    implementation rootProject.ext.dependencies["module_api"]
    implementation rootProject.ext.dependencies["module_picbrowser"]

    //==============================组件依赖===============================
    //kotlin
//    implementation rootProject.ext.dependencies["anko"]
//    implementation rootProject.ext.dependencies["kotlin_reflect"]

    implementation rootProject.ext.dependencies["multidex"]

    implementation rootProject.ext.dependencies["butterknife"]
    annotationProcessor rootProject.ext.dependencies["butterknife_compiler"]

    implementation rootProject.ext.dependencies["magic_indicator"]
    implementation rootProject.ext.dependencies["calendarview"]
    implementation rootProject.ext.dependencies["headline_autosize"]

    implementation rootProject.ext.dependencies["pictureSelector"]
    implementation rootProject.ext.dependencies["range_time_picker"]

    implementation rootProject.ext.dependencies["banner"]

    implementation rootProject.ext.dependencies["smart_table"]

    implementation rootProject.ext.dependencies["glide"]
    annotationProcessor rootProject.ext.dependencies["glide_compiler"]
    implementation rootProject.ext.dependencies["glide_okhttp_integration"]
    implementation rootProject.ext.dependencies["glide_transformations"]

    implementation rootProject.ext.dependencies["picasso"]
    implementation rootProject.ext.dependencies["base_rvadapter"]
    implementation rootProject.ext.dependencies["brvah"]
    implementation rootProject.ext.dependencies["smart_refresh"]

    implementation rootProject.ext.dependencies["barlibrary"]

    implementation rootProject.ext.dependencies["logger"]

    implementation rootProject.ext.dependencies["progressmanager"]

    implementation rootProject.ext.dependencies["gson"]

    implementation rootProject.ext.dependencies["dagger2"]
    annotationProcessor rootProject.ext.dependencies["dagger2_compiler"]

    //use greendao
    implementation rootProject.ext.dependencies["greendao"]
    implementation rootProject.ext.dependencies["greendao-generator"]
    implementation rootProject.ext.dependencies["greendao-sqlcipher"]

}
